package s15.Multithreading.Synchronization.BlockingQueue;

import java.util.concurrent.ArrayBlockingQueue;

//A blocking queue is a queue and a thread safe collection, meaning that they are able
//to handle multithreaded applications, we will use producer and consumer 
//example
class Producer implements Runnable{

	private ArrayBlockingQueue<Integer> queue;

	@Override
	public void run() {
		//infinite while loop 
		while(true) {
			try {
				Thread.sleep(1000);
				queue.put(App.counter++);
				System.out.println("Value added to queue: " + App.counter);
			} catch (InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	public Producer(ArrayBlockingQueue<Integer> queue) {
		this.queue = queue;
	}
	
}

class Consumer{
	
}
public class App {

	static int counter = 1;
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
